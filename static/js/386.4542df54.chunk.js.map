{"version":3,"file":"static/js/386.4542df54.chunk.js","mappings":"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","sources":["ClientRoute.js","clientmaster/dashboard.jsx"],"sourcesContent":["import {lazy,Suspense} from \"react\";\nimport {Routes,Route} from \"react-router-dom\";\nimport LoadingAnimation from \"./feature/LodingAnimation\";\n\nconst ClientList=lazy(()=> import(\"./clientmaster/ClientList\"));\nconst ClientSetup=lazy(()=> import(\"./clientmaster/ClientSetup\"));\n\nconst ClientRoute=()=>{\n  return (<Routes>\n    <Route path=\"view\" index element={\n    <Suspense fallback={<LoadingAnimation/>}>\n      <ClientList/>\n    </Suspense>}/>\n    <Route path=\"add/*\" element={\n    <Suspense fallback={<LoadingAnimation/>}>\n      <ClientSetup/>\n    </Suspense>}/>\n  \n  </Routes>)\n}\nexport default ClientRoute;","import Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport {useState} from \"react\";\nimport {Link,\n  useLocation,\n} from \"react-router-dom\";\nimport {styled} from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport SearchIcon from '@mui/icons-material/Search';\nimport TextField from '@mui/material/TextField';\nimport ClientRoute from \"../ClientRoute\";\n\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nconst drawerWidth = 240;\n\nconst list=[\n  {text:\"View Client\",icon:<MailIcon/>,path:\"/client/view\"},\n  {text:\"Add Client\",icon:<InboxIcon/>,path:\"/client/add\"}\n  ]\nconst Dashboard=()=> {\n  const location = useLocation();\n \n  const pathnames = location.pathname.split('/').filter((x) => x);\n  const [Item,setItem]=useState(\"\")\n  const [State,setState]=useState(\"\")\n  const breadcrumbNameMap = {\n  '/client': 'client',\n  '/client/view': 'View',\n  '/client/add': 'Create',\n  '/client/add/payment': 'Payment',\n  '/client/add/theme': 'Theme',\n  '/client/add/module': 'Modules',\n  '/client/add/success': 'Success',\n /* [`/client/add/payment/${company.replace(\"\",\"%20\")}`]: 'Payment',\n  [`/client/add/theme/${company.replace(\"\",\"%20\")}`]: 'Theme',\n  [`/client/add/module/${company.replace(\"\",\"%20\")}`]: 'Modules',*/\n\n};\n  const StyledList=styled(List)(({theme})=>({\n    padding:'0.5rem',\n    '& .MuiListItem-root':{\n      '& .MuiButtonBase-root':{\n        borderRadius:\"5rem\",\n        '&:hover':{\n          backgroundColor:theme.palette.primary.main,\n          color:theme.palette.text.primary,\n          transform:\"scale(0.9)\"\n        },\n        '&:active':{\n          backgroundColor:theme.palette.primary.main,\n          color:theme.palette.text.primary,\n          transform:\"scale(0.9)\"\n        }\n      }\n    }\n  }))\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"permanent\"\n        anchor=\"left\"\n      >\n        <Toolbar className=\"d-block p-1\">\n          <Typography variant=\"span\" className=\"h5 fw-bold text-start px-2\">Company Name</Typography>\n          <TextField\n                    label={<div><SearchIcon/> Search Modules</div>}\n                    id=\"outlined-start-adornment\"\n                    sx={{ m: 1}}\n                    value={State}\n                    onChange={(e)=>setState(e.target.value)}\n                    className=\"rounded-pill\"\n                    size=\"small\"\n                  />\n        </Toolbar>\n        <Typography className=\"text-start ms-2\" variant=\"span\" sx={{color:\"primary.secondary\" }}>Client Master</Typography>\n        <StyledList>\n          {list.map((item, index) => (\n            <ListItem component={Link} to={item.path} key={index} disablePadding>\n              <ListItemButton onClick={()=>setItem(item.text)}>\n                <ListItemIcon>\n                  {item.icon}\n                </ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </StyledList>\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{ flexGrow: 1, bgcolor: 'background.default', p: 3 }}\n      >\n      <Typography className=\"fw-bolder text-start\" variant=\"h4\">{Item}</Typography>\n    <Breadcrumbs seperator=\">\" aria-label=\"breadcrumb\">\n      <Link underline=\"hover\" color=\"inherit\" to=\"/\">\n        Home\n      </Link>\n      {pathnames.map((value, index) => {\n       const last = index === pathnames.length - 1;\n        const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n        return last ? (\n          <Typography color=\"text.primary\" key={to}>\n            {breadcrumbNameMap[to]}\n          </Typography>\n        ) : (\n          <Link underline=\"hover\" color=\"text.inherit\" to={to} key={to}>\n            {breadcrumbNameMap[to]}\n          </Link>\n        );\n      })}\n    </Breadcrumbs>\n      <ClientRoute />\n      </Box>\n    </Box>\n  );\n}\nexport default Dashboard;"],"names":["ClientList","lazy","ClientSetup","path","index","element","Suspense","fallback","list","text","icon","Mail","pathnames","useLocation","pathname","split","filter","x","useState","Item","setItem","State","setState","breadcrumbNameMap","StyledList","styled","List","theme","padding","borderRadius","backgroundColor","palette","primary","main","color","transform","Box","sx","display","CssBaseline","Drawer","width","flexShrink","boxSizing","variant","anchor","Toolbar","className","Typography","TextField","label","Search","id","m","value","onChange","e","target","size","map","item","ListItem","component","Link","to","disablePadding","ListItemButton","onClick","ListItemIcon","ListItemText","flexGrow","bgcolor","p","Breadcrumbs","seperator","underline","last","length","slice","join"],"sourceRoot":""}